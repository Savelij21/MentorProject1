from aiogram import Bot, F, Router
from aiogram.enums import ContentType
from aiogram.filters import CommandStart
from aiogram.types import Message, ReplyKeyboardRemove, User as TgUser
from sqlalchemy import select

from database import async_session
from keyboards import get_start_keyboard
from models import User

# HANDLERS ------------------------------------------------------
router = Router()


@router.message(CommandStart())
async def process_start_command(message: Message, bot: Bot):

    tg_user: TgUser = message.from_user

    async with async_session() as session:

        stmt = select(User).where(User.tg_id == tg_user.id)
        result = await session.execute(stmt)
        db_user: User | None = result.scalar_one_or_none()

        if db_user is None:
            return await message.answer(
                text="–í–∞—Å –µ—â–µ –Ω–µ—Ç –≤ –±–∞–∑–µ. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ üëá",
                reply_markup=get_start_keyboard()
            )

    return await message.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –≤ —Å–∏—Å—Ç–µ–º–µ!")


@router.message(F.contact)
async def process_contact(message: Message, bot: Bot):

    tg_user: TgUser = message.from_user

    async with async_session() as session:

        print(message.contact.phone_number)

        stmt = select(User).where(User.phone == message.contact.phone_number)
        result = await session.execute(stmt)
        db_user: User | None = result.scalar_one_or_none()

        if db_user is None:
            return await message.answer(
                text="–í–∞—à–µ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –í –¥–æ—Å—Ç—É–ø–µ –æ—Ç–∫–∞–∑–∞–Ω–æ.",
                reply_markup=ReplyKeyboardRemove()
            )

        db_user.tg_id = tg_user.id
        await session.commit()
        return await message.answer(
            text="–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –≤ —Å–∏—Å—Ç–µ–º–µ!",
            reply_markup=ReplyKeyboardRemove()
        )


